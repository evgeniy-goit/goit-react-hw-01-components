{"version":3,"sources":["tasks/socialProfile/profile.module.css","tasks/statistics/Statistic.module.css","tasks/friendList/FriendList.module.css","tasks/transactionHistory/Transactions.module.css","tasks/default.jpeg","tasks/socialProfile/profile.js","tasks/statistics/statistics.js","tasks/friendList/friendList.js","tasks/transactionHistory/transaction.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","defaultImage","Statistics","title","styles","statistics","list","map","id","percentage","item","FriendList","friends","e","isOnline","green","red","width","Transactions","items","table","tr","type","amount","currency","App","user","statisticalData","friendsTitle","transactionsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90475b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__CDpip\",\"name\":\"profile_name__1DFOo\",\"tag\":\"profile_tag__1LIKo\",\"avatar\":\"profile_avatar__3uvXf\",\"stats\":\"profile_stats__3E5I1\",\"item\":\"profile_item__1XTjN\",\"label\":\"profile_label__2D9dJ\",\"quantity\":\"profile_quantity__1JfuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__2z_8q\",\"title\":\"Statistic_title__12WPz\",\"list\":\"Statistic_list__19OZQ\",\"item\":\"Statistic_item__J4umM\",\"label\":\"Statistic_label__MicXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__2MeXn\",\"item\":\"FriendList_item__16CVT\",\"label\":\"FriendList_label__350de\",\"red\":\"FriendList_red__1jxI0 FriendList_label__350de\",\"green\":\"FriendList_green__FqX0w FriendList_label__350de\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Transactions_table__7W5Kj\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpeg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport defaultImage from \"../../tasks/default.jpeg\";\nimport style from \"../socialProfile/profile.module.css\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={style.avatar} />\n        <p className={style.name}>{name}</p>\n        <p className={style.tag}>{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li>\n          <span className={style.label}>Followers</span>\n          <span className={style.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={style.label}>Views</span>\n          <span className={style.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={style.label}>Likes</span>\n          <span className={style.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  avatar: defaultImage,\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistic.module.css\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.list}>\n        {stats.map(({ id, label, percentage }) => (\n          <li key={id} className={styles.item}>\n            <span className={styles.label}>{label}</span>\n            <span className={styles.percentage}>{percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./FriendList.module.css\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={style.list}>\n      {friends.map((e) => {\n        return (\n          <li key={e.id} className={style.item}>\n            <span className={e.isOnline ? style.green : style.red}></span>\n            <img src={e.avatar} alt={e.name} width=\"48\" />\n            <p>{e.name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Transactions.module.css\";\n\nconst Transactions = ({ items }) => {\n  return (\n    <table className={style.table}>\n      <thead>\n        <tr className={style.tr}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((e) => (\n          <tr key={e.id}>\n            <td>{e.type}</td>\n            <td>{e.amount}</td>\n            <td>{e.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactions.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Transactions;\n","import React from \"react\";\nimport Profile from \"./tasks/socialProfile/profile\";\nimport Statistics from \"./tasks/statistics/statistics\";\nimport FriendList from \"./tasks/friendList/friendList\";\nimport Transactions from \"./tasks/transactionHistory/transaction\";\nimport user from \"./components/user.json\";\nimport statisticalData from \"./components/statistical-data.json\";\nimport friendsTitle from \"./components/friends.json\";\nimport transactionsTitle from \"./components/transactions.json\";\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friendsTitle} />\n      <Transactions items={transactionsTitle} />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}